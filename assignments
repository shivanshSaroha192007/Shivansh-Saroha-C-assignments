//Assignment 1
//Q1
#include <stdio.h>
#include <math.h>

int main() {
    int a, e, o, result = 0, n = 0;

    printf("Enter a number: ");
    scanf("%d", &a);

    e = a;

    while (e != 0) {
        e /= 10;
        ++n;
    }

    e = a;

    while (e != 0) {
        o = e % 10;
        result += (int)pow(o, n);
        e /= 10;
    }

    if (result == a) {
        printf("%d is an Armstrong number.\n", a);
    } else {
        printf("%d is not an Armstrong number.\n", a);
    }

    return 0;
}
//  Q2
#include <stdio.h>

int hcf(int a, int b) {
    int min = (a > b) ? b : a;
    while (min > 0) {
        if (a % min == 0 && b % min == 0) {
            break;
        }
        min--;
    }
    return min;
}

int lcm(int a, int b) {
    int lc = (a * b) / hcf(a, b);
    return lc;
}

int main() {
    int a, b, h, l;
    printf("enter no 1: ");
    scanf("%d", &a);
    printf("enter no 2: ");
    scanf("%d", &b);

    h = hcf(a, b);
    l = lcm(a, b);

    printf("%d\n", h);
    printf("%d\n", l);

    return 0;
}
//Q3
#include <stdio.h>
int subtract(int num1, int num2) {
    int negNum2 = ~num2 + 1;
    return num1 + negNum2;
}
int main() {
    int num1, num2, difference;
    printf("Enter the first number: ");
    scanf("%d", &num1);
    printf("Enter the second number: ");
    scanf("%d", &num2);
    difference = subtract(num1, num2);
    printf("The result of %d - %d is: %d\n", num1, num2, difference);
    return 0;
}
//  q4
#include <stdio.h>

void swapXOR(int *a, int *b) {
    *a = *a ^ *b;
    *b = *a ^ *b;
    *a = *a ^ *b;
}

void swapMulDiv(int *a, int *b) {
    *a = *a * *b;
    *b = *a / *b;
    *a = *a / *b;
}

void swapTemp(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

void swapAddSub(int *a, int *b) {
    *a = *a + *b;
    *b = *a - *b;
    *a = *a - *b;
}

int main() {
    int p, q;
    printf("Enter two numbers: ");
    scanf("%d %d", &p, &q);

    printf("\nBefore swap: p = %d, q = %d", p, q);
    swapXOR(&p, &q);
    printf("\nAfter swap XOR: p = %d, q = %d", p, q);

    swapMulDiv(&p, &q);
    printf("\nAfter swap Mul/Div: p = %d, q = %d", p, q);

    swapTemp(&p, &q);
    printf("\nAfter swap Temp: p = %d, q = %d", p, q);

    swapAddSub(&p, &q);
    printf("\nAfter swap Add/Sub: p = %d, q = %d\n", p, q);

    return 0;
}
//Q5
#include <stdio.h>
int main() {
    int n, total = 0;
    printf("Enter a number: ");
    scanf("%d", &n);
    for (int i = 1; i <= n / 2; i++) {
        if (n % i == 0) {
            total += i;
        }
    }
    if (total == n) {
        printf("%d is a Perfect Number.\n", n);
    } else {
        printf("%d is not a Perfect Number.\n", n);
    }
    return 0;
}
//Q6
#include<stdio.h>
int main(){
    int x,y;
    printf("enter X coordinate:");
    scanf("%d",&x);

    printf("enter Y coordinate:");
    scanf("%d",&x);
  

    if (x > 0 && y > 0) {
        printf("First quadrant\n");
    } else if (x < 0 && y > 0) {
        printf("Second quadrant\n");
    } else if (x < 0 && y < 0) {
        printf("Third quadrant\n");
    } else if (x > 0 && y < 0) {
        printf("Fourth quadrant\n");
    } else if (x == 0 && y != 0) {
        printf("Point lies on the Y-axis\n");
    } else if (x != 0 && y == 0) {
        printf("Point lies on the X-axis\n");
    } else {
        printf("Point is at the origin\n");
    }
    
    return 0;
}
//  Q7
#include<stdio.h>
#include<math.h>

int binary(int n);
void decimal(int n);

int main() {
    int a, x, y, g, rev = 0;
    printf("press 1 for binary to decimal\n");
    printf("press 2 for decimal to binary\n");
    scanf("%d", &a);

    if(a == 1) {
        printf("Enter the binary no.\n");
        scanf("%d", &x);
        printf("decimal no. is %d", binary(x));
    } else if(a == 2) {
        printf("Enter the decimal no.\n");
        scanf("%d", &y);
        decimal(y);
    }
}

int binary(int n) {
    int r, g = 0;
    for (int i = 0; n > 0; i++) {
        r = n % 10;
        if (r == 1) {
            g = g + pow(2, i);
        }
        n = n / 10;
    }
    return g;
}

void decimal(int n) {
    printf("decimal no. is ");
    int bin[64], i = 0;
    while (n > 0) {
        bin[i] = n % 2;
        n = n / 2;
        i++;
    }
    for (int j = i - 1; j >= 0; j--) {
        printf("%d", bin[j]);
    }
}
//Q8
#include <stdio.h>

int main() {
    for(int i = 1; i <= 5; i++) {
        for(int j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0) {
                printf("%d", 1);
            } else {
                printf("%d", 0);
            }
        }
        printf("\n");
    }
    return 0;
}
//Q9
#include <stdio.h>

int main() {
    for(int i = 1; i <= 5; i++) {
        for(int j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0) {
                printf("0");
            } else {
                printf("1");
            }
        }

        for(int j = 1; j <= (2 * (5 - i)); j++) {
            printf(" ");
        }

        for(int j = 1; j <= i; j++) {
            if ((i + j) % 2 == 0) {
                printf("0");
            } else {
                printf("1");
            }
        }

        printf("\n");
    }
    return 0;
}
//Q10
#include <stdio.h>

int main() {
    int rows;

    printf("Enter the number of rows: ");
    scanf("%d", &rows);

    for(int i = 0; i < rows; i++) {
        int value = 1;
        
        for(int j = 0; j <= i; j++) {
            printf("%d ", value);
            value = value * (i - j) / (j + 1);  
        }
        
        printf("\n");
    }

    return 0;
}
//Assignment 2
//Q1
#include <stdio.h>
int main() {
    int N;
    printf("Enter the number of students: ");
    scanf("%d", &N);
    int marks[N];
    printf("Enter the marks of %d students:\n", N);
    for (int i = 0; i < N; i++) {
        printf("Student %d: ", i + 1);
        scanf("%d", &marks[i]);
    }
    for (int i = 0; i < N; i++) {
        marks[i] += 5;
    }
    printf("\nUpdated marks:\n");
    for (int i = 0; i < N; i++) {
        printf("Student %d: %d\n", i + 1, marks[i]);
    }
    return 0;
}
//Q2
#include <stdio.h>

int main() {
    int N;
    printf("Enter the number of students: ");
    scanf("%d", &N);
    
    int marks;
    for (int i = 1; i <= N; i++) {
        printf("Enter marks for Student %d: ", i);
        scanf("%d", &marks);
        
        if (marks >= 75) {
            printf("Student %d: A grade\n", i);
        } else if (marks >= 60) {
            printf("Student %d: B grade\n", i);
        } else if (marks >= 40) {
            printf("Student %d: C grade\n", i);
        } else {
            printf("Student %d: D grade\n", i);
        }
    }

    return 0;
}
//Q3to Q8
#include <stdio.h>

int main() {
    int totalStudents;
    
    printf("Enter the number of students: ");
    scanf("%d", &totalStudents);
    
    int studentMarks[totalStudents];
    
    printf("Enter the marks of %d students\n", totalStudents);
    for (int i = 0; i < totalStudents; i++) {
        printf("Student %d: ", i + 1);
        scanf("%d", &studentMarks[i]);
    }
    
    int firstScore99 = -1;
    for (int i = 0; i < totalStudents; i++) {
        if (studentMarks[i] == 99) {
            firstScore99 = i + 1;
            break;
        }
    }
    if (firstScore99 != -1) {
        printf("The first student to score 99 is Student %d\n", firstScore99);
    } else {
        printf("No student scored 99\n");
    }
    
    int countScore99 = 0;
    printf("Students who scored 99\n");
    for (int i = 0; i < totalStudents; i++) {
        if (studentMarks[i] == 99) {
            printf("Student %d\n", i + 1);
            countScore99++;
        }
    }
    if (countScore99 > 0) {
        printf("Total students who scored 99: %d\n", countScore99);
    } else {
        printf("No student scored 99\n");
    }

    int totalMarks = 0;
    for (int i = 0; i < totalStudents; i++) {
        totalMarks += studentMarks[i];
    }
    printf("Sum of all scores: %d\n", totalMarks);

    float averageMarks = (float)totalMarks / totalStudents;
    printf("Average score: %.2f\n", averageMarks);

    for (int i = 0; i < totalStudents; i++) {
        if (studentMarks[i] % 2 == 0) {
            printf("Student %d's score %d is Even\n", i + 1, studentMarks[i]);
        } else {
            printf("Student %d's score %d is Odd\n", i + 1, studentMarks[i]);
        }
    }

    int highestScore = studentMarks[0], lowestScore = studentMarks[0];
    for (int i = 1; i < totalStudents; i++) {
        if (studentMarks[i] > highestScore) {
            highestScore = studentMarks[i];
        }
        if (studentMarks[i] < lowestScore) {
            lowestScore = studentMarks[i];
        }
    }
    printf("Maximum score: %d\n", highestScore);
    printf("Minimum score: %d\n", lowestScore);

    return 0;
}
//Q9
#include <stdio.h>

int main() {
    int size;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int elements[size];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &elements[i]);
    }

    if (elements[0] >= elements[1]) {
        printf("Peak element: %d\n", elements[0]);
    } else if (elements[size-1] >= elements[size-2]) {
        printf("Peak element: %d\n", elements[size-1]);
    } else {
        for (int i = 1; i < size - 1; i++) {
            if (elements[i] >= elements[i-1] && elements[i] >= elements[i+1]) {
                printf("Peak element: %d\n", elements[i]);
                break;
            }
        }
    }

    return 0;
}

//Q10
#include <stdio.h>
#include <stdbool.h>

bool checkPrime(int number) {
    if (number <= 1) return false;
    for (int i = 2; i * i <= number; i++) {
        if (number % i == 0) return false;
    }
    return true;
}

int main() {
    int size;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int elements[size];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &elements[i]);
    }

    int primeCount = 0;
    for (int i = 0; i < size; i++) {
        if (checkPrime(elements[i])) {
            primeCount++;
        }
    }

    printf("Prime numbers count: %d\n", primeCount);
    return 0;
}

//Q11
#include <stdio.h>

int main() {
    int size, position, value;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int arr[size + 1];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter position to insert (0 to %d): ", size);
    scanf("%d", &position);
    printf("Enter value to insert: ");
    scanf("%d", &value);

    for (int i = size; i > position; i--) {
        arr[i] = arr[i - 1];
    }

    arr[position] = value;
    size++;  // Increase size after insertion

    printf("Array after insertion: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}

//Q12
#include <stdio.h>

int main() {
    int size, position;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int arr[size];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter position to delete (0 to %d): ", size - 1);
    scanf("%d", &position);

    for (int i = position; i < size - 1; i++) {
        arr[i] = arr[i + 1];
    }

    size--; // Decrease size after deletion

    printf("Array after deletion: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}

//Q13
#include <stdio.h>

int main() {
    int size;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int arr[size];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    int lastElement = arr[size - 1];
    for (int i = size - 1; i > 0; i--) {
        arr[i] = arr[i - 1];
    }
    arr[0] = lastElement;

    printf("Array after rotation: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}

//Q14
#include <stdio.h>

int main() {
    int size;
    printf("Enter number of elements: ");
    scanf("%d", &size);

    int arr[size];
    printf("Enter the elements: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Duplicate elements: ");
    for (int i = 0; i < size; i++) {
        for (int j = i + 1; j < size; j++) {
            if (arr[i] == arr[j]) {
                printf("%d ", arr[i]);
                break;
            }
        }
    }

    printf("\n");
    return 0;
}
//assignment 3
#include<stdio.h>
#include<math.h>
int main(){
    char choice;
    float a,b;
    printf("press / for division\npress * for multiplication\npress + for addition\npress - for subtraction\npress L for log\npress S for square root\n");
    printf("enter your choice\n");
    scanf("%c",&choice);
    printf("provide two values\n");
    scanf("%f %f",&a,&b);
    switch(choice){
        case '/':printf("division of 2 numbers is %0.2f",a/b);
        break;
        case '*':printf("multiplication of 2 numbers is %0.2f",a*b);
        break;
        case '+':printf("addition of 2 numbers is %0.2f",a+b);
        break;
        case '-':printf("subtraction of 2 numbers is %0.2f",a-b);
        break;
        case 'L':printf("log of 2 numbers is %0.2f and %0.2f",log10(a),log10(b));
        break;
        case 'S':printf("square root of 2 numbers is %0.2f and %0.2f",pow(a,2),pow(b,2));
        break;
        default:printf("invalid choice");
        break;
    }
}
//assignment 4
#include<stdio.h>
int main(){
    char user,comp;
    int c,flagA=0,flagB=0;
    printf("enter 'R' for Rock, 'S' for Scissor, 'P' for Paper.");
    for(int i=0;i<=2;i++)
    {
        printf("\nenter(R,S,P):");
        scanf(" %c", &user);
        printf("\nenter no for computer choice from 0-100:");
        scanf(" %d", &c);

        if(c<=33 && c>=0){
            comp='R';
        }
        else if(c>33 && c<=66){
            comp='P';
        }
        else if(c>66 && c<=100){
            comp='S';
        }

        if (user=='R' && comp=='P'){
            printf("\ncomputer wins this round");
            flagB++;
        }
        else if (user=='R' && comp=='S'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='R' && comp=='R'){
            printf("\nits a tie");
        }
        else if (user=='P' && comp=='P'){
            printf("\nits a tie");
        }
        else if (user=='P' && comp=='S'){
            printf("\ncomputer wins this round");
            flagB++;
        }
        else if (user=='P' && comp=='R'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='S' && comp=='P'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='S' && comp=='S'){
            printf("\nits a tie");
        }
        else if (user=='S' && comp=='R'){
            printf("\ncomputer wins this round");
            flagB++;
        }
    }
    if(flagA>flagB)
    printf("\nUser wins the game");
    else if(flagA<flagB)
    printf("\nComputer wins the game");
    else
    printf("\nThe game is a tie");


return 0;
}
//assignment 5
#include<stdio.h>
int main(){
    char user,comp;
    int c,flagA=0,flagB=0;
    printf("enter 'R' for Rock, 'S' for Scissor, 'P' for Paper.");
    for(int i=0;i<=2;i++)
    {
        printf("\nenter(R,S,P):");
        scanf(" %c", &user);
        printf("\nenter no for computer choice from 0-100:");
        scanf(" %d", &c);

        if(c<=33 && c>=0){
            comp='R';
        }
        else if(c>33 && c<=66){
            comp='P';
        }
        else if(c>66 && c<=100){
            comp='S';
        }

        if (user=='R' && comp=='P'){
            printf("\ncomputer wins this round");
            flagB++;
        }
        else if (user=='R' && comp=='S'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='R' && comp=='R'){
            printf("\nits a tie");
        }
        else if (user=='P' && comp=='P'){
            printf("\nits a tie");
        }
        else if (user=='P' && comp=='S'){
            printf("\ncomputer wins this round");
            flagB++;
        }
        else if (user=='P' && comp=='R'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='S' && comp=='P'){
            printf("\nuser wins this round");
            flagA++;
        }
        else if (user=='S' && comp=='S'){
            printf("\nits a tie");
        }
        else if (user=='S' && comp=='R'){
            printf("\ncomputer wins this round");
            flagB++;
        }
    }
    if(flagA>flagB)
    printf("\nUser wins the game");
    else if(flagA<flagB)
    printf("\nComputer wins the game");
    else
    printf("\nThe game is a tie");


return 0;
}//assignmnent 6
#include <stdio.h>
int main()
{
    //Tic-Tac-Toe Game
    int n,m,i,j,h=1;
    char a='O',b='X',c,t[3][4] = {{'1', '2', '3', '\0'},{'4', '5', '6', '\0'},{'7', '8', '9', '\0'}};
    start:
    printf("Player 1:%c\n",a);
    printf("Player 2:%c\n",b);
    printf("\n\n");
    while (h>0)
    {
        printf("Player 1\n");
        pl1:
        printf("Enter the row");
        scanf("%d",&n);
        printf("Enter the column");
        scanf("%d",&m);
        if (t[n-1][m-1]=='O' || t[n-1][m-1]=='X')
        {
            printf("Entered Invalid\n");
            goto pl1;
        }
        else 
            t[n-1][m-1]=a;
        printf("\n");
        for (i=0;i<=2;i++)
        {
            for (j=0;j<=2;j++)
            {
                printf("%c ",t[i][j]);
            }
            printf("\n");
        }
        if ( (t[0][0]==t[0][1] && t[0][0]==t[0][2]) || (t[1][0]==t[1][1] && t[1][0]==t[1][2]) 
            || (t[2][0]==t[2][1] && t[2][0]==t[2][2]) || (t[0][0]==t[1][0] && t[0][0]==t[2][0]) 
            || (t[0][1]==t[2][1] && t[0][1]==t[1][1]) || (t[0][2]==t[2][2] && t[0][2]==t[1][2]) 
            || (t[0][2]==t[1][2] && t[0][2]==t[2][0]) || (t[0][0]==t[1][1] && t[0][0]==t[2][2]))
        {
            printf("Player 1 wins the game");
            break;
        }
        printf("Player 2\n");
        pl2:
        printf("Enter row");
        scanf("%d",&n);
        printf("Enter column");
        scanf("%d",&m);
        if (t[n-1][m-1]=='O' || t[n-1][m-1]=='X')
        {
            printf("Entered Invalid\n");
            goto pl2;
        }
        else 
            t[n-1][m-1]=b;
        printf("\n");
        for (i=0;i<=2;i++)
        {
            for (j=0;j<=2;j++)
            {
                printf("%c ",t[i][j]);
            }
            printf("\n");
        }
        if ( (t[0][0]==t[0][1] && t[0][0]==t[0][2]) || (t[1][0]==t[1][1] && t[1][0]==t[1][2]) 
            || (t[2][0]==t[2][1] && t[2][0]==t[2][2]) || (t[0][0]==t[1][0] && t[0][0]==t[2][0]) 
            || (t[0][1]==t[2][1] && t[0][1]==t[1][1]) || (t[0][2]==t[2][2] && t[0][2]==t[1][2]) 
            || (t[0][2]==t[1][2] && t[0][2]==t[2][0]) || (t[0][0]==t[1][1] && t[0][0]==t[2][2]))
        {
            printf("Player 2 wins the game");
            break;
        }
    }
    char ans[3];
    printf("\ndo you wish to continue playing:");
    scanf("%s", &ans);
    if(ans[]=="yes")
    goto start;
    else
    printf("\nthanku for playing the game");
    return 0;
}


